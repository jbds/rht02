// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");

function PlayingCardRotatable(Props) {
  var cardIndex = Props.cardIndex;
  var filePath = Props.filePath;
  var leftVw = Props.leftVw;
  var topVh = Props.topVh;
  var parentElementWidthPx = Props.parentElementWidthPx;
  var parentElementHeightPx = Props.parentElementHeightPx;
  var isFlipSide = Props.isFlipSide;
  var lifecycle = Props.lifecycle;
  var cardHalfWidthPx = parentElementHeightPx * 25.0 / (100.0 * 1.56 * 2.0);
  var leftAdjustedVw = leftVw * 0.8 - cardHalfWidthPx * 100.0 / parentElementWidthPx;
  var cardHalfHeightPx = parentElementHeightPx * 25.0 / (100.0 * 2.0);
  var topAdj = topVh - cardHalfHeightPx * 100.0 / parentElementHeightPx;
  var transformA = "translate(" + (cardHalfWidthPx.toString() + ("px, " + ((-cardHalfWidthPx * 4.25).toString() + "px)")));
  var transformB = "rotate(" + ((3.625 * (cardIndex - 8.0)).toString() + "deg)");
  var transformC = "translate(" + ((-cardHalfWidthPx).toString() + ("px, " + ((cardHalfWidthPx * 4.25).toString() + "px)")));
  var adjustedFilePath = isFlipSide ? "./images/1B.svg" : filePath;
  var i = React.createElement("img", {
        style: {
          height: (25.0).toString() + "vh",
          left: leftAdjustedVw.toString() + "vw",
          position: "absolute",
          top: topAdj.toString() + "vh",
          transform: transformC + (" " + (transformB + (" " + transformA)))
        },
        src: adjustedFilePath
      });
  if (lifecycle === /* Hand */1) {
    return i;
  } else {
    return null;
  }
}

var make = PlayingCardRotatable;

exports.make = make;
/* react Not a pure module */
